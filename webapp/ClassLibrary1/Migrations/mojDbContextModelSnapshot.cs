// <auto-generated />
using System;
using ClassLibrary1.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ClassLibrary1.Migrations
{
    [DbContext(typeof(mojDbContext))]
    partial class mojDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ClassLibrary1.Models.BrojOsoba", b =>
                {
                    b.Property<int>("BrojOsobaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("brOsoba")
                        .HasColumnType("int");

                    b.HasKey("BrojOsobaID");

                    b.ToTable("BrojOsoba");
                });

            modelBuilder.Entity("ClassLibrary1.Models.Chat", b =>
                {
                    b.Property<int>("ChatID")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<DateTime>("VrijemePocetka")
                        .HasColumnType("datetime2");

                    b.HasKey("ChatID");

                    b.HasIndex("UserID");

                    b.ToTable("Chat");
                });

            modelBuilder.Entity("ClassLibrary1.Models.Email", b =>
                {
                    b.Property<int>("EmailID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmailAdresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sadrzaj")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.Property<DateTime>("VrijemeSlanja")
                        .HasColumnType("datetime2");

                    b.HasKey("EmailID");

                    b.HasIndex("UserID");

                    b.ToTable("Email");
                });

            modelBuilder.Entity("ClassLibrary1.Models.KapacitetStola", b =>
                {
                    b.Property<int>("KapacitetStolaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("maxBrStolica")
                        .HasColumnType("int");

                    b.Property<int>("minBrStolica")
                        .HasColumnType("int");

                    b.HasKey("KapacitetStolaID");

                    b.ToTable("KapacitetStola");
                });

            modelBuilder.Entity("ClassLibrary1.Models.Komentar", b =>
                {
                    b.Property<int>("KomentarID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Sadrzaj")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<DateTime>("VrijemePostavljanja")
                        .HasColumnType("datetime2");

                    b.HasKey("KomentarID");

                    b.HasIndex("UserID");

                    b.ToTable("Komentar");
                });

            modelBuilder.Entity("ClassLibrary1.Models.Konekcija", b =>
                {
                    b.Property<int>("KonekcijaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<string>("Vrijednost")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KonekcijaID");

                    b.HasIndex("UserID");

                    b.ToTable("Konekcija");
                });

            modelBuilder.Entity("ClassLibrary1.Models.Nalog", b =>
                {
                    b.Property<int>("NalogID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumKreiranja")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Lozinka")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("NalogID");

                    b.ToTable("Nalog");
                });

            modelBuilder.Entity("ClassLibrary1.Models.Obavijest", b =>
                {
                    b.Property<int>("ObavijestID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naslov")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sadrzaj")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SlikaID")
                        .HasColumnType("int");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.Property<DateTime>("VrijemeObjave")
                        .HasColumnType("datetime2");

                    b.HasKey("ObavijestID");

                    b.HasIndex("SlikaID");

                    b.HasIndex("UserID");

                    b.ToTable("Obavijest");
                });

            modelBuilder.Entity("ClassLibrary1.Models.Poslovnica", b =>
                {
                    b.Property<int>("PoslovnicaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("PoslovnicaID");

                    b.HasIndex("UserID");

                    b.ToTable("Poslovnica");
                });

            modelBuilder.Entity("ClassLibrary1.Models.Proizvod", b =>
                {
                    b.Property<int>("ProizvodID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Cijena")
                        .HasColumnType("float");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<int?>("SlikaID")
                        .HasColumnType("int");

                    b.Property<int?>("TipProizvodaID")
                        .HasColumnType("int");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ProizvodID");

                    b.HasIndex("SlikaID");

                    b.HasIndex("TipProizvodaID");

                    b.HasIndex("UserID");

                    b.ToTable("Proizvod");
                });

            modelBuilder.Entity("ClassLibrary1.Models.Rezervacija", b =>
                {
                    b.Property<int>("RezervacijaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BrojOsobaID")
                        .HasColumnType("int");

                    b.Property<string>("BrojTelefona")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<string>("DatumRezervacije")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Ime")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<string>("Napomena")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<int?>("PoslovnicaID")
                        .HasColumnType("int");

                    b.Property<string>("Prezime")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<int?>("TerminRezervacijeID")
                        .HasColumnType("int");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.Property<DateTime>("VrijemeZahtjeva")
                        .HasColumnType("datetime2");

                    b.HasKey("RezervacijaID");

                    b.HasIndex("BrojOsobaID");

                    b.HasIndex("PoslovnicaID");

                    b.HasIndex("TerminRezervacijeID");

                    b.HasIndex("UserID");

                    b.ToTable("Rezervacija");
                });

            modelBuilder.Entity("ClassLibrary1.Models.Slika", b =>
                {
                    b.Property<int>("SlikaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.Property<DateTime>("datumPostavljanja")
                        .HasColumnType("datetime2");

                    b.Property<string>("lokacijaSlike")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("slika")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("SlikaID");

                    b.HasIndex("UserID");

                    b.ToTable("Slika");
                });

            modelBuilder.Entity("ClassLibrary1.Models.Stol", b =>
                {
                    b.Property<int>("StolID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Dostupan")
                        .HasColumnType("bit");

                    b.Property<int?>("KapacitetStolaID")
                        .HasColumnType("int");

                    b.Property<int?>("PoslovnicaID")
                        .HasColumnType("int");

                    b.HasKey("StolID");

                    b.HasIndex("KapacitetStolaID");

                    b.HasIndex("PoslovnicaID");

                    b.ToTable("Stol");
                });

            modelBuilder.Entity("ClassLibrary1.Models.TerminRezervacije", b =>
                {
                    b.Property<int>("TerminRezervacijeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("terminRez")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TerminRezervacijeID");

                    b.ToTable("TerminRezervacije");
                });

            modelBuilder.Entity("ClassLibrary1.Models.TipProizvoda", b =>
                {
                    b.Property<int>("TipProizvodaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.HasKey("TipProizvodaID");

                    b.ToTable("TipProizvoda");
                });

            modelBuilder.Entity("ClassLibrary1.Models.Token", b =>
                {
                    b.Property<int>("TokenID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("NalogID")
                        .HasColumnType("int");

                    b.Property<string>("Vrijednost")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("VrijemeKreiranja")
                        .HasColumnType("datetime2");

                    b.HasKey("TokenID");

                    b.HasIndex("NalogID");

                    b.ToTable("Token");
                });

            modelBuilder.Entity("ClassLibrary1.Models.Uloga", b =>
                {
                    b.Property<int>("ulogaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("nazivUloge")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ulogaID");

                    b.ToTable("Uloga");
                });

            modelBuilder.Entity("ClassLibrary1.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("NalogID")
                        .HasColumnType("int");

                    b.Property<int?>("UlogaID")
                        .HasColumnType("int");

                    b.Property<string>("adresaStanovanja")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<string>("brojTelefona")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<string>("prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.HasKey("UserID");

                    b.HasIndex("NalogID");

                    b.HasIndex("UlogaID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("ClassLibrary1.Models.Chat", b =>
                {
                    b.HasOne("ClassLibrary1.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ClassLibrary1.Models.Email", b =>
                {
                    b.HasOne("ClassLibrary1.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID");
                });

            modelBuilder.Entity("ClassLibrary1.Models.Komentar", b =>
                {
                    b.HasOne("ClassLibrary1.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ClassLibrary1.Models.Konekcija", b =>
                {
                    b.HasOne("ClassLibrary1.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ClassLibrary1.Models.Obavijest", b =>
                {
                    b.HasOne("ClassLibrary1.Models.Slika", "Slika")
                        .WithMany()
                        .HasForeignKey("SlikaID");

                    b.HasOne("ClassLibrary1.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID");
                });

            modelBuilder.Entity("ClassLibrary1.Models.Poslovnica", b =>
                {
                    b.HasOne("ClassLibrary1.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID");
                });

            modelBuilder.Entity("ClassLibrary1.Models.Proizvod", b =>
                {
                    b.HasOne("ClassLibrary1.Models.Slika", "Slika")
                        .WithMany()
                        .HasForeignKey("SlikaID");

                    b.HasOne("ClassLibrary1.Models.TipProizvoda", "TipProizvoda")
                        .WithMany()
                        .HasForeignKey("TipProizvodaID");

                    b.HasOne("ClassLibrary1.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID");
                });

            modelBuilder.Entity("ClassLibrary1.Models.Rezervacija", b =>
                {
                    b.HasOne("ClassLibrary1.Models.BrojOsoba", "BrojOsoba")
                        .WithMany()
                        .HasForeignKey("BrojOsobaID");

                    b.HasOne("ClassLibrary1.Models.Poslovnica", "Poslovnica")
                        .WithMany()
                        .HasForeignKey("PoslovnicaID");

                    b.HasOne("ClassLibrary1.Models.TerminRezervacije", "TerminRezervacije")
                        .WithMany()
                        .HasForeignKey("TerminRezervacijeID");

                    b.HasOne("ClassLibrary1.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID");
                });

            modelBuilder.Entity("ClassLibrary1.Models.Slika", b =>
                {
                    b.HasOne("ClassLibrary1.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID");
                });

            modelBuilder.Entity("ClassLibrary1.Models.Stol", b =>
                {
                    b.HasOne("ClassLibrary1.Models.KapacitetStola", "KapacitetStola")
                        .WithMany()
                        .HasForeignKey("KapacitetStolaID");

                    b.HasOne("ClassLibrary1.Models.Poslovnica", "Poslovnica")
                        .WithMany()
                        .HasForeignKey("PoslovnicaID");
                });

            modelBuilder.Entity("ClassLibrary1.Models.Token", b =>
                {
                    b.HasOne("ClassLibrary1.Models.Nalog", "Nalog")
                        .WithMany()
                        .HasForeignKey("NalogID");
                });

            modelBuilder.Entity("ClassLibrary1.Models.User", b =>
                {
                    b.HasOne("ClassLibrary1.Models.Nalog", "Nalog")
                        .WithMany()
                        .HasForeignKey("NalogID");

                    b.HasOne("ClassLibrary1.Models.Uloga", "Uloga")
                        .WithMany()
                        .HasForeignKey("UlogaID");
                });
#pragma warning restore 612, 618
        }
    }
}
